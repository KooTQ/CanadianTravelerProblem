import numpy as np
import matplotlib.pyplot as plt


size = 100
repeat_each_amount = 15
pair_amount = 10
eps = 1e-6

times_hops = []
costs_hops = []
dec_times_hops = []

Ns = ["N=5", "N=10", "N=50"]
# LOWER RANDOM N = 5
# Prep Time:
time_hop = [[14.145227909088135, 14.341742277145386, 14.07471776008606, 14.56337285041809, 19.063650608062744,
             14.481705904006958, 14.652865409851074, 14.23949146270752, 14.350654602050781, 13.93021845817566],
            [4.461428642272949, 4.454082727432251, 4.640464544296265, 4.838253974914551, 4.803117275238037,
             4.606943368911743, 4.369239568710327, 4.421722173690796, 4.818115234375, 4.44362473487854]]
# Costs:
costs_hop = [[2177.0, 2177.0, 2177.0, 2177.0, 2196.0, 2177.0, 2177.0, 2177.0, 2177.0, 2177.0],
             [366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0]]
# Decision Time:
# dec_hop = \
# [[4.715074398004579, 4.780579165522073, 4.691571022838345, 4.85445599865403,
# 4.76591146053782, 4.827233692257755, 4.884286841854744, 4.746495572070649, 4.78354993950028, 4.643404604923685],
# [4.461424180848769, 4.454078273353978, 4.640459903836361, 4.838249136665414,
# 4.803112472125566, 4.606938761972981, 4.369235199475128, 4.421717751973044, 4.8181104162645845, 4.443620291258249]]
times_hops.append(time_hop)
costs_hops.append(costs_hop)

# LOWER RANDOM N=10
# Costs:
costs_hop = [[2195.0, 2195.0, 2195.0, 2195.0, 2195.0, 2195.0, 2195.0, 2196.0, 2195.0, 2195.0], [389.0, 389.0, 389.0, 389.0, 635.0, 389.0, 389.0, 635.0, 635.0, 635.0]]
# Prep Time:
time_hop = [[46.12515592575073, 46.58441615104675, 46.42656898498535, 45.65876483917236, 45.730915546417236, 47.05971026420593, 47.122286558151245, 36.21712040901184, 46.212175130844116, 46.84692335128784], [18.493125438690186, 18.898199558258057, 18.949454069137573, 19.238668203353882, 27.28932023048401, 18.340471982955933, 18.773357152938843, 27.122610330581665, 27.372257232666016, 27.239227533340454]]
# Decision Time:
# [[9.225029340144278, 9.316881366833076, 9.285311939934681, 9.131751141484244, 9.146181280047191, 9.411940170453152, 9.424455426739163, 9.0542778386835, 9.242433177682187, 9.369382796381009], [9.246558096066044, 9.4490950545815, 9.474722297207638, 9.619329292012294, 9.096437044682322, 9.170231406362262, 9.38667388313248, 9.040867096571523, 9.124082702861104, 9.079739484533656]]

times_hops.append(time_hop)
costs_hops.append(costs_hop)

# LOWER RANDOM N = 50
# Costs:
costs_hop = [[2182.0, 2182.0, 2182.0, 2182.0, 2182.0, 2182.0, 2182.0, 2182.0, 2182.0, 2182.0],
             [366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 366.0]]
# Prep Time:
time_hop = [[237.61045336723328, 192.70526885986328, 195.91328048706055, 192.0594084262848, 195.27186560630798,
             193.37785291671753, 191.63983607292175, 193.47228980064392, 193.17048168182373, 193.45967149734497],
            [43.50298023223877, 42.13172268867493, 43.121384143829346, 42.09463119506836, 41.8091197013855,
             41.7300910949707, 43.48268437385559, 42.84641623497009, 43.15357422828674, 42.106359004974365]]
# Decision Time:
# dec_hop =
# [[59.40259849115869, 48.17630517088953, 48.978307877188165, 48.01484010286117, 48.81795419708845, 48.34445114306659,
# 47.909947040743674, 48.36806035814589, 48.29260834730385, 48.3649057831098], [43.50293672930204, 42.131680556994375,
# 43.12134102248832, 42.09458910047926, 41.809077892307606, 41.73004936492134,
# 43.4826408912147, 42.84637338859671, 43.15353107475567, 42.10631689865747]]
times_hops.append(time_hop)
costs_hops.append(costs_hop)

avgs_costs = []
avgs_times = []
counter_costs = []
for e in range(len(costs_hops)):
    avg_costs = []
    avg_times = []
    avg_time = 0
    for i in range(len(costs_hops[e])):
        cost = costs_hops[e][i]
        avg_cost = 0
        fail_counter = eps
        for j in range(len(cost)):
            if cost[j] != -1:
                avg_cost += cost[j]
                avg_time += times_hops[e][i][j]
            else:
                fail_counter += 1
        if fail_counter < len(cost):
            avg_costs.append(avg_cost / (len(cost) - fail_counter))
        else:
            avg_costs.append(None)
    avgs_costs.append(avg_costs)
    avgs_times.append(avg_time)

for j in range(len(avgs_costs)):
    for i in range(len(avgs_costs[j])):
        print('%.2f' % avgs_costs[j][i])
print("\n")

for j in range(len(avgs_times)):
    print('%.2f' % avgs_times[j])

arr_costs = np.array(avgs_costs)
arr_times = np.array(avgs_times)
fig1, ax1 = plt.subplots()
fig2, ax2 = plt.subplots()
ax1.set_title('HOP Koszt')
ax2.set_title('HOP Czas')

ax1.boxplot(arr_costs)
ax1.set_ylabel('Koszt trasy')
plt.xticks([1, 2, 3], labels=Ns)
ax2.set_ylabel('Czas [s]')
ax2.bar(Ns, arr_times)
# ax2.xticks([1, 2, 3], labels=Ns)
plt.xticks(Ns, labels=Ns)
plt.show()

# End of file
